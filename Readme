11/24/20
This directory, if on c0 (c0:~ghidley/getcams), is the source directory for the getcams system.
Sources manged by git and stored on https://github.com/ghidley/getcams
Directory backed up nightly via cron driven scp to c1:bu/getcams
This code runs at UCSD (on c0, aka camacq1)) and at UCI  (on c5, aka uci-camacq1)

Most development done here, then followed by  "sudo make" to install in run area
Running "sudo make all" will also cp over vanilla control files cam_access_format and cam_params
Password file cam_access is handled manually (and not present in git repository)
Add hpwren crontab entry to manage log files: 
 1 0 * * *       ~ghidley/getcams/cleanlogs

Testing start (-I) -- one fo following:
    sudo -u hpwren ~hpwren/bin/getcams/run_cameras -I
    make start
    systemctl start getcams

Testing restart (-R) -- one of following:
    sudo -u hpwren ~hpwren/bin/getcams/run_cameras -R 
    make restart
    systemctl restart getcams

Testing stop (-X) -- one of following:
    sudo -u hpwren ~hpwren/bin/getcams/run_cameras -X 
    make stop
    systemctl stop getcams

Start up in debug (-I -D) mode -- one of following:
    sudo -u hpwren ~hpwren/bin/getcams/run_cameras -I -D
    make testd

Design Goals
  Replicates archive*'s getcamsXXXanimations + c[12]'s updatedanimations functionality initially
  Original goal was populating c1:/Data/archive, while disabling archive* scp's and ssh's to c1
  Revised goal is to run on c0 VM and populate ceph or EdgeFS or POSIX storage
  Maybe in parallel, setup to run on c[12] and drop images into standard locations (emergency replacement for archive[2-5]
  Provide alternate timing mechanism not dependent on cron ... drive via boot startup 
  Could at some point also [re]populate wfe camera web site (displacing archive*)
 
Use daemon driven run_cameras - getcams-xxx.pl invocation
Uses local FS for temp files

TODO:
Containerize???
When available, use fetch proxie???
