#!/bin/csh
# v092606
# Updated log file locations to /var/local/hpwren
# Updated to handle motion detected images as well
# Target changed to /Data/archive to effectively merge real-time and archival image areas
#
# Called by archive* (i.e. getcamsiqeyeanimations6.pl) via:
#     system("ssh -l hpwren c1.hpwren.ucsd.edu \"bin/updateanimations $DIR $CAMERA $dstamp $APTAG $time\" 2> /dev/null &"); 
# Typical expected args ... DIR=/Data/Cameras/Animations, CAMERA=smer-gorge, dstamp=20141211, APTAG=Q5, time=1418333452
# 	DIR now forced to /Data/archive (as of v112915)
# Assumes current camera images scp'd from archive* to c1 ramdisk tmp area (c1:/usr/LocalWeb/Boiler/Cameras/L/tmp)
#   prior to calling getcams*animations*.pl
# This script 
#     1) ensures $DIR/$CAMERA directory structure is up to date
#     2) copies previous "current" images from c1:/usr/LocalWeb/Boiler/Cameras/L/$CAMERA to $DIR/$CAMERA areas for archival
#     3) copies latest "current" images from c1 ramdisk tmp area (c1:/usr/LocalWeb/Boiler/Cameras/L/tmp) to c1:/usr/LocalWeb/Boiler/Cameras/L/$CAMERA
#set DBG = 1
#Old: set LOG = ~hpwren/bin/logfiles/updatelog
set LOG = /var/local/hpwren/log/updatelog


#if ($?DBG) then
	echo -n Running updateanimations 1=$argv[1] 2=$argv[2] 3=$argv[3] 4=$argv[4] 5=$argv[5]  " " >> $LOG
	date >> $LOG
#endif

if ($#argv != 5) then
	echo Insufficient args: #argv = $#argv >> $LOG
	exit
endif

# DIR overloaded for Motion Detected images
# Motion detected files of the format 123456789.123.jpg

set DIR      = $argv[1]
set CAMERA   = $argv[2]
set dstamp   = $argv[3]
set APTAG    = $argv[4]
set time     = $argv[5]  
set L        = /usr/LocalWeb/Boiler/Cameras/L
set LT        = /usr/LocalWeb/Boiler/Cameras/L/tmp

if ($APTAG == "MD") then
	set mdfile = $DIR
	set tempfile = $LT/$DIR
else
	set tempfile = $LT/$CAMERA-175.jpg #works for both valid cam files and TV pattern file
endif
if (! -e $tempfile) then
	echo File $tempfile does not exist >> $LOG
	exit
endif

#DIR overloaded for Motion Detected images
set DIR      = /Data/archive

mkdir -p $DIR/$CAMERA > /dev/null
mkdir -p $DIR/$CAMERA/small/$dstamp/$APTAG > /dev/null
mkdir -p $DIR/$CAMERA/large/$dstamp/$APTAG > /dev/null

if ($APTAG != "MD") then
	foreach f ($CAMERA.jpg $CAMERA-175.jpg $CAMERA-diff.jpg $CAMERA-diff175.jpg $CAMERA-640.jpg $CAMERA.jpg)
		if (-e $LT/$f) then
			if (-e $L/$f) then
				if ($?DBG) then
					echo /bin/cp -f $L/$f $DIR/$CAMERA >> $LOG
				endif
				/bin/cp -f $L/$f $DIR/$CAMERA
			endif
			if ($?DBG) then
				echo /bin/mv -f $LT/$f $L/$f >> $LOG
			endif
			/bin/mv -f $LT/$f $L/$f
		endif
	end
endif

# MD files go straight to storage, bypassing ramdisk
if ($APTAG == "MD") then
	if (-e $LT/$mdfile) then
		if ($?DBG) then
			echo /bin/mv $LT/$mdfile $DIR/$CAMERA/large/$dstamp/$APTAG/$mdfile >> $LOG
		endif
		/bin/mv $LT/$mdfile $DIR/$CAMERA/large/$dstamp/$APTAG/$mdfile
	endif

else
	if (-e $L/$CAMERA.jpg) then
		if ($?DBG) then
			echo /bin/cp -f $L/$CAMERA.jpg $DIR/$CAMERA/large/$dstamp/$APTAG/$time.jpg >> $LOG
		endif
		/bin/cp -f $L/$CAMERA.jpg $DIR/$CAMERA/large/$dstamp/$APTAG/$time.jpg
	endif
	if (-e $L/$CAMERA-640.jpg) then
		if ($?DBG) then
			echo /bin/cp -f $L/$CAMERA-640.jpg $DIR/$CAMERA/small/$dstamp/$APTAG/$time.jpg >> $LOG
		endif
		/bin/cp -f $L/$CAMERA-640.jpg $DIR/$CAMERA/small/$dstamp/$APTAG/$time.jpg
	endif

endif
