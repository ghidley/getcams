#!/bin/csh
# v011018
# Updated log file locations to /var/local/hpwren
# Updated to handle motion detected images as well
# Target changed to /Data/archive to effectively merge real-time and archival image areas
#
# Called by archive* (i.e. getcamsiqeyeanimations6.pl) via:
#     system("ssh -l hpwren c1.hpwren.ucsd.edu \"bin/updateanimations $DIR $CAMERA $dstamp $APTAG $time\" 2> /dev/null &"); 
# Typical expected args ... DIR=/Data/Cameras/Animations, CAMERA=smer-gorge, dstamp=20141211, APTAG=Q5, time=1418333452
# 	DIR now forced to /Data/archive (as of v112915)
# Assumes current camera images scp'd from archive* to c1 tmp area (c1:/Data/archive/incoming/cameras/tmp)
#   prior to calling getcams*animations*.pl
# This script 
#     1) ensures $CAMERA directory structure is up to date under /Data/archive
#     2) copies previous "current" images from c1:/Data/archive/incoming/$CAMERA to /Data/archive/$CAMERA areas for archival
#     3) copies latest "current" images from c1 tmp area to c1 archive area
#set DBG = 1

set LOG = /var/local/hpwren/log/updatelog
if ( ! -d /var/local/hpwren/log ) then
	mkdir -p /var/local/hpwren/log > /dev/null
endif

if ($#argv == 6) then
	set AHOST     = $argv[6]  # Host from which this script was called
else
	set AHOST     = host_not_set
endif

if ($#argv < 5) then
	echo Insufficient args: #argv = $#argv >> $LOG
	exit
endif

set LOGDATE=`date +%Y%m%d`
set LOGTIME=`date +%H:%M:%S`
set LOGHOST=`hostname -s`


# DIR overloaded for Motion Detected images
# Motion detected files of the format 123456789.123.jpg

set DIR      = $argv[1]  # No longer uses passed arg EXCEPT in case of Motion Detected (MD) images
set ERR      = $argv[1]  # DIR also used to pass error return code of failed fetches from archive4/5 mobo cams!
set CAMERA   = $argv[2]
set dstamp   = $argv[3]
set APTAG    = $argv[4]
set time     = $argv[5]  

if ($ERR == "/Data/Cameras/Animations") then
    set ERR = TBD
endif

set W        = /Data/archive/incoming/cameras
set WT        = /Data/archive/incoming/cameras/tmp
if ( ! -d $WT ) then
	mkdir -p $WT > /dev/null
endif


if ($APTAG == "MD") then
	set mdfile = $DIR    #DIR set to image filename in case of MD images
	set tempfile = $WT/$DIR
else
	set tempfile = $WT/$CAMERA-175.jpg #works for both valid cam files and TV pattern file
endif

if (! -e $tempfile) then
        echo updateanimations\[$LOGHOST\]: $LOGDATE $LOGTIME $argv[2] $argv[4] $argv[5] $AHOST " File $tempfile does not exist" >> $LOG
	exit
endif

#DIR overloaded for Motion Detected images ... reset to actual target directory
set DIR      = /Data/archive

mkdir -p $DIR/$CAMERA > /dev/null
mkdir -p $DIR/$CAMERA/large/$dstamp/$APTAG > /dev/null

#Check for TV pattern file indicating error in image fetch
set size = `wc -c $WT/$CAMERA-175.jpg |  awk  '{print $1}'`
if ($size == "7392") then
    echo updateanimations\[$LOGHOST\]: $LOGDATE $LOGTIME $argv[2] $argv[4] $argv[5] $AHOST " Failed with error $ERR" >> $LOG
	/bin/mv -f $WT/$CAMERA-175.jpg $W/$CAMERA-175.jpg
	exit
else
    echo updateanimations\[$LOGHOST\]: $LOGDATE $LOGTIME $argv[2] $argv[4] $argv[5] $AHOST " " >> $LOG
endif

#1) Move new WT to W;
#2) Copy new W to /Data/archive/$cam/large/$time/Q?/$timestamp.jpg

if ($APTAG != "MD") then
	foreach f ($CAMERA.jpg $CAMERA-175.jpg $CAMERA-diff.jpg $CAMERA-diff175.jpg $CAMERA-640.jpg $CAMERA.jpg)
		if (-e $WT/$f) then
			if ($?DBG) then
				echo /bin/mv -f $WT/$f $W/$f >> $LOG
			endif
			/bin/mv -f $WT/$f $W/$f
		endif
	end
endif

# MD files go straight to storage
if ($APTAG == "MD") then
	if (-e $WT/$mdfile) then
		if ($?DBG) then
			echo /bin/mv $WT/$mdfile $DIR/$CAMERA/large/$dstamp/$APTAG/$mdfile >> $LOG
		endif
		/bin/mv $WT/$mdfile $DIR/$CAMERA/large/$dstamp/$APTAG/$mdfile
	endif

else
	if (-e $W/$CAMERA.jpg) then
		if ($?DBG) then
			echo /bin/cp -f $W/$CAMERA.jpg $DIR/$CAMERA/large/$dstamp/$APTAG/$time.jpg >> $LOG
		endif
		/bin/cp -f $W/$CAMERA.jpg $DIR/$CAMERA/large/$dstamp/$APTAG/$time.jpg
	endif

endif
